#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

# other variables
final_path="/opt/yunohost/$app"
media_dir="/home/yunohost.multimedia/share/Music"
work_dir="/home/yunohost.app/$app"
conf_file="$final_path/$app.conf"
cmd_file="/usr/local/bin/mopidyctl"

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Finding an available port..."

# Find an available port
port=$(ynh_find_port --port=6680)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=30

ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username="$app" --home_dir="$final_path" --use_shell

#=================================================
# INSTALL MOPIDY IN PYTHON ENVIRONMENT
#=================================================
ynh_script_progression --message="Install in Python environment..." --weight=30

myynh_install
patch -u $final_path/env/lib/python$python_version/site-packages/mopidy/__main__.py -i ../sources/patches/__main__.patch --forward

ynh_app_setting_set --app=$app --key=final_path --value=$final_path

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE YUNOHOST DIRECTORIES
#=================================================
ynh_script_progression --message="Creating YunoHost directories..."

ynh_multimedia_build_main_dir      # /home/yunohost.multimedia

data_dir=$work_dir/data
mkdir -p "$data_dir" 
cache_dir=$work_dir/cache         # /home/yunohost.app/mopidy/data
mkdir -p "$cache_dir"
       # /home/yunohost.app/mopidy/cache
chown -R $app: "$work_dir"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# MODIFY A CONFIG FILE
#=================================================
ynh_script_progression --message="Setup config file..."

ynh_add_config --template="../conf/app.conf" --destination="$final_path/$app.conf"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# user mopidy needs permission to mkdir on final_path
chown -R root: $final_path
chown $app: $final_path

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add $app --description "Mopidy music server" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..."

# Make app public if necessary
if [ $is_public -eq 1 ]; then
	ynh_permission_update --permission="main" --add="visitors"
fi

ynh_permission_url --permission="main" --add_url="$domain/mopidy/ws"
ynh_permission_url --permission="main" --add_url="$domain/musicbox_webclient"
ynh_permission_url --permission="main" --add_url="$domain/local"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# PROVIDE ADDITIONAL SHELL COMAND 
#=================================================
ynh_script_progression --message="Provide additional shell command..."

cp -a ../sources/extra_files/mopidyctl "$cmd_file"
ynh_replace_string --match_string="__APP__"        --replace_string=$app        --target_file="$cmd_file"
ynh_replace_string --match_string="__FINAL_PATH__" --replace_string=$final_path --target_file="$cmd_file"
ynh_replace_string --match_string="__CONF_FILE__"  --replace_string=$conf_file  --target_file="$cmd_file"

chmod +x "$cmd_file"

#=================================================
# PROVIDE EXAMPLES
#=================================================

# provide example m3u-playlist
mkdir -p "$work_dir/data/m3u/"
cp -a ../sources/extra_files/radio_international.m3u "$work_dir/data/m3u/radio_international.m3u"

#provide example podcasts
mkdir -p "$work_dir/data/podcast"
cp -a ../sources/extra_files/bbc.opml "$work_dir/data/podcast/bbc.opml"

#provide example local music file
if [ "$(ls -A "$media_dir" 2> /dev/null)" == "" ]; then   # copy example.mp3 to mediadir if empty (for test purpose) 
    cp -a ../sources/extra_files/Tryad_Beauty.mp3 "$media_dir"
fi

#=================================================
# SCAN LOCAL MEDIA DIRECTORY
#=================================================
ynh_script_progression --message="Scan local media directory..."

"$cmd_file" local scan  2>&1

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
